<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:jaxrs="http://cxf.apache.org/jaxrs"
		xmlns:util="http://www.springframework.org/schema/util"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
			http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">
			
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-jaxrs-binding.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>WEB-INF/repository.properties</value>
				<value>WEB-INF/cache.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="/WEB-INF/ehcache.xml"/>
	</bean>

	<bean id="eventCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager" ref="cacheManager"/>
		<property name="cacheName" value="eventCache"/>
		<property name="maxElementsInMemory" value="${cache.size.memory}"/>
		<property name="maxElementsOnDisk" value="${cache.size.disk}"/>
		<property name="eternal" value="${cache.element.eternal}"/>
		<property name="overflowToDisk" value="${cache.overflow.disk}"/>
		<property name="memoryStoreEvictionPolicy" value="${cache.eviction.policy}"/>
	</bean>
	
	<bean id="contentListener" class="org.jcrest.listener.ContentListener">
		<property name="jcrTemplate" ref="jcrTemplate"/>
		<property name="eventCache" ref="eventCache"/>
	</bean>

	<bean id="jcrRepository" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="${repository.jndi.name}"/>
		<property name="jndiEnvironment">
			<props>
				<prop key="java.naming.provider.url">http://jcr.day.com</prop>
				<prop key="java.naming.factory.initial">com.day.util.jndi.provider.MemoryInitialContextFactory</prop>
			</props>
		</property>
	</bean>
	
	<bean id="password" class="java.lang.String">
		<constructor-arg index="0" value="${repository.user.password}"/>
	</bean>
	
	<bean id="jcrSessionFactory" class="org.springmodules.jcr.JcrSessionFactory">
		<property name="repository" ref="jcrRepository"/>
		<property name="workspaceName" value="${repository.workspace.name}"/>
		<property name="credentials">
			<bean class="javax.jcr.SimpleCredentials">
				<constructor-arg index="0" value="${repository.user.name}"/>
				<constructor-arg index="1">
					<bean factory-bean="password" factory-method="toCharArray"/>
				</constructor-arg>
			</bean>
		</property>
		<property name="eventListeners">
			<list>
				<bean class="org.springmodules.jcr.EventListenerDefinition">
					<property name="listener" ref="contentListener"/>
					<property name="absPath" value="/content"/>
				</bean>
			</list>
		</property>
	</bean>
	
	<bean id="jcrTemplate" class="org.springmodules.jcr.JcrTemplate">
		<property name="sessionFactory" ref="jcrSessionFactory"/>
		<property name="allowCreate" value="true"/>
	</bean>
	
	<util:map id="jsonNamespaceMap" map-class="java.util.Hashtable">
		<entry key="http://www.jc-rest.org" value=""/>
	</util:map>
	
	<jaxrs:server id="contentServer" address="/">
		<jaxrs:serviceBeans>
			<ref bean="contentReadService" />
			<ref bean="contentWriteService" />
			<ref bean="contentRepositoryService" />
			<ref bean="contentWorkspaceService" />
		</jaxrs:serviceBeans>
		<jaxrs:providers>
			<bean class="org.apache.cxf.jaxrs.provider.AtomFeedProvider"/>
			<bean class="org.apache.cxf.jaxrs.provider.JSONProvider">
				<property name="namespaceMap" ref="jsonNamespaceMap"/>
			</bean>
		</jaxrs:providers>
		<jaxrs:extensionMappings>
			<entry key="feed" value="application/atom+xml"/>
			<entry key="json" value="application/json"/>
			<entry key="xml" value="application/xml"/>
			<entry key="html" value="text/html"/>
		</jaxrs:extensionMappings>
	</jaxrs:server>
	
	<bean id="contentReadService" class="org.jcrest.service.rest.ContentReadService">
		<property name="jcrTemplate" ref="jcrTemplate"/>
		<property name="eventCache" ref="eventCache"/>
		<property name="freemarkerConfig" ref="freemarkerConfig"/>
	</bean>
	
	<bean id="contentWriteService" class="org.jcrest.service.rest.ContentWriteService">
		<property name="jcrTemplate" ref="jcrTemplate"/>
	</bean>
	
	<bean id="contentRepositoryService" class="org.jcrest.service.rest.ContentRepositoryService">
		<property name="jcrTemplate" ref="jcrTemplate"/>
	</bean>
	
	<bean id="contentWorkspaceService" class="org.jcrest.service.rest.ContentWorkspaceService">
		<property name="jcrTemplate" ref="jcrTemplate"/>
	</bean>
	
	<bean id="freemarkerConfig" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
		<property name="templateLoaderPath" value="/WEB-INF/templates/ftl"/>
	</bean>
	
</beans>